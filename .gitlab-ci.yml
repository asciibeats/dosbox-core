  
# DESCRIPTION: GitLab CI/CD for libRetro (NOT FOR GitLab-proper)

##############################################################################
################################# BOILERPLATE ################################
##############################################################################

# Core definitions
.core-defs:
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    JNI_PATH: libretro
    CORENAME: dosbox_core
    MAKEFILE_PATH: libretro
    MAKEFILE: Makefile.libretro

# Inclusion templates, required for the build to work
include:
  ################################## DESKTOPS ################################
  # Windows 64-bit
  - project: 'libretro-infrastructure/ci-templates'
    file: '/windows-x64-mingw.yml'
    
  # Windows 32-bit
  - project: 'libretro-infrastructure/ci-templates'
    file: '/windows-i686-mingw.yml'

  # Linux 64-bit
  - project: 'libretro-infrastructure/ci-templates'
    file: '/linux-x64.yml'

  # Linux 32-bit
  - project: 'libretro-infrastructure/ci-templates'
    file: '/linux-i686.yml'

  # MacOS 64-bit
  - project: 'libretro-infrastructure/ci-templates'
    file: '/osx-x64.yml'

  ################################## CELLULAR ################################
  # Android
  - project: 'libretro-infrastructure/ci-templates'
    file: '/android-jni.yml'

  ################################## CONSOLES ################################
  # Nintendo Switch
# Disable for now, upstream broke dynarec build.
#  - project: 'libretro-infrastructure/ci-templates'
#    file: '/libnx-static.yml'

# Stages for building
stages:
  - build-prepare
  - build-shared
  - build-static

##############################################################################
#################################### STAGES ##################################
##############################################################################
#
################################### DESKTOPS #################################
# Windows 64-bit
libretro-build-windows-x64:
  extends:
    - .libretro-windows-x64-mingw-make-default
    - .core-defs
  variables:
    STRIP_CORE_LIB: 0
    AR: ar
    AS: as
    CC: gcc
    CXX: g++
    CMAKE_GENERATOR: Ninja
    platform: win
    TARGET_TRIPLET: x86_64-w64-mingw32.static
    BUNDLED_AUDIO_CODECS: 1
    BUNDLED_GLIB: 0
    BUNDLED_LIBSNDFILE: 1
    BUNDLED_SDL: 0
    STATIC_LIBCXX: 0
    WITH_BASSMIDI: 1
    WITH_DYNAREC: x86_64
    WITH_FLUIDSYNTH: 1
    WITH_VOODOO: 1
  script:
    - touch libretro/deps/mpg123/aclocal.m4
    - sleep 1
    - find libretro/deps/mpg123/ -name "*.in" -exec touch '{}' \;
    - sleep 1
    - touch libretro/deps/mpg123/configure
    - make -C ${MAKEFILE_PATH} -f ${MAKEFILE} deps
    - make -C ${MAKEFILE_PATH} -f ${MAKEFILE} -j${NUMPROC}
    - x86_64-w64-mingw32.static-strip ${MAKEFILE_PATH}/${CORENAME}_libretro.dll

# Windows 32-bit
libretro-build-windows-i686:
  extends:
    - .libretro-windows-i686-mingw-make-default
    - .core-defs
  variables:
    STRIP_CORE_LIB: 0
    AR: ar
    AS: as
    CC: gcc
    CXX: g++
    CMAKE_GENERATOR: Ninja
    platform: win
    TARGET_TRIPLET: i686-w64-mingw32.static
    BUNDLED_AUDIO_CODECS: 1
    BUNDLED_GLIB: 0
    BUNDLED_LIBSNDFILE: 1
    BUNDLED_SDL: 0
    STATIC_LIBCXX: 0
    WITH_BASSMIDI: 1
    WITH_DYNAREC: x86
    WITH_FLUIDSYNTH: 1
    WITH_VOODOO: 1
  script:
    - touch libretro/deps/mpg123/aclocal.m4
    - sleep 1
    - find libretro/deps/mpg123/ -name "*.in" -exec touch '{}' \;
    - sleep 1
    - touch libretro/deps/mpg123/configure
    - make -C ${MAKEFILE_PATH} -f ${MAKEFILE} deps
    - make -C ${MAKEFILE_PATH} -f ${MAKEFILE} -j${NUMPROC}
    - i686-w64-mingw32.static-strip ${MAKEFILE_PATH}/${CORENAME}_libretro.dll

# Linux 64-bit
libretro-build-linux-x64:
  extends:
    - .libretro-linux-x64-make-default
    - .core-defs
  variables:
    CC: gcc-9
    CXX: g++-9
    platform: unix
    BUNDLED_AUDIO_CODECS: 1
    BUNDLED_GLIB: 1
    BUNDLED_LIBSNDFILE: 1
    BUNDLED_SDL: 1
    CMAKE_GENERATOR: Ninja
    STATIC_LIBCXX: 1
    WITH_BASSMIDI: 1
    WITH_DYNAREC: x86_64
    WITH_FLUIDSYNTH: 1
    WITH_VOODOO: 1
  image: $CI_SERVER_HOST:5050/libretro-infrastructure/libretro-build-amd64-ubuntu:xenial-gcc9
  script:
    - python3 -m pip install --no-cache-dir meson==0.55.3 ninja
    - touch libretro/deps/mpg123/aclocal.m4
    - sleep 1
    - find libretro/deps/mpg123/ -name "*.in" -exec touch '{}' \;
    - sleep 1
    - touch libretro/deps/mpg123/configure
    - make -C ${MAKEFILE_PATH} -f ${MAKEFILE} deps
    - make -C ${MAKEFILE_PATH} -f ${MAKEFILE} -j${NUMPROC}
    - strip ${MAKEFILE_PATH}/${CORENAME}_libretro.so

# Linux 32-bit
libretro-build-linux-i686:
  extends:
    - .libretro-linux-i686-make-default
    - .core-defs
  variables:
    CC: gcc-9
    CXX: g++-9
    platform: unix
    BUNDLED_AUDIO_CODECS: 1
    BUNDLED_GLIB: 1
    BUNDLED_LIBSNDFILE: 1
    BUNDLED_SDL: 1
    CMAKE_GENERATOR: Ninja
    STATIC_LIBCXX: 1
    WITH_BASSMIDI: 1
    WITH_DYNAREC: x86
    WITH_FLUIDSYNTH: 1
    WITH_VOODOO: 1
  image: $CI_SERVER_HOST:5050/libretro-infrastructure/libretro-build-i386-ubuntu:xenial-gcc9
  script:
    - linux32 python3 -m pip install --no-cache-dir meson==0.55.3 ninja
    - touch libretro/deps/mpg123/aclocal.m4
    - sleep 1
    - find libretro/deps/mpg123/ -name "*.in" -exec touch '{}' \;
    - sleep 1
    - touch libretro/deps/mpg123/configure
    - linux32 make -C ${MAKEFILE_PATH} -f ${MAKEFILE} deps
    - linux32 make -C ${MAKEFILE_PATH} -f ${MAKEFILE} -j${NUMPROC}
    - strip ${MAKEFILE_PATH}/${CORENAME}_libretro.so

# MacOS 64-bit
libretro-build-osx-x64:
  extends:
    - .libretro-osx-x64-make-default
    - .core-defs
  variables:
    CC: gcc-11
    CXX: g++-11
    platform: osx
    WITH_DYNAREC: x86_64
    STATIC_LIBCXX: 1
    BUNDLED_AUDIO_CODECS: 0
    BUNDLED_LIBSNDFILE: 0
    BUNDLED_SDL: 0
    PKG_CONFIG_FLAGS: --static
    MACOS_SDK_PATH: /private/var/tmp/homebrew_dosbox_core/MacOSX10.13.sdk
    MACOS_DEPLOYMENT_TARGET: '10.12'
    EXTRA_CMAKE_FLAGS: -DCMAKE_OSX_SYSROOT=/private/var/tmp/homebrew_dosbox_core/MacOSX10.13.sdk -DCMAKE_OSX_DEPLOYMENT_TARGET=10.12
    HOMEBREW_PREFIX: /private/var/tmp/homebrew_dosbox_core
    HOMEBREW_CELLAR: /private/var/tmp/homebrew_dosbox_core/Cellar
    HOMEBREW_SHELLENV_PREFIX: /private/var/tmp/homebrew_dosbox_core
  script:
    - export PATH="/private/var/tmp/homebrew_dosbox_core/bin:/private/var/tmp/homebrew_dosbox_core/sbin:$PATH"
    - pushd .
    - cd /private/var/tmp
    - rm -rf homebrew_dosbox_core
    - mkdir homebrew_dosbox_core
    - cd homebrew_dosbox_core
    - curl -s -S -L 'https://github.com/realnc/stuff/releases/download/stuff/zstd-macos.tar.xz' | tar x
    - curl -s -S -L 'https://github.com/realnc/stuff/releases/download/stuff/homebrew-10.12-dosbox-core.tar.zst' | ./zstd -d | tar x
    - rm -rf include/fluidsynth*
    - rm -f lib/libfluidsynth.*
    - rm -f lib/pkgconfig/fluidsynth.pc
    - mkdir static_libs
    - ln -s /private/var/tmp/homebrew_dosbox_core/{lib,opt/libffi/lib}/*.a static_libs/
    - curl -s -S -L 'https://github.com/realnc/stuff/releases/download/stuff/MacOSX10.13.sdk.tar.zst' | ./zstd -d | tar x
    - popd
    - make -C ${MAKEFILE_PATH} -f ${MAKEFILE} deps
    - export LDFLAGS="-L \"$PWD/libretro/deps_bin/lib\" -L /private/var/tmp/homebrew_dosbox_core/static_libs"
    - make -C ${MAKEFILE_PATH} -f ${MAKEFILE} -j${NUMPROC}
    - strip -u -r -S ${MAKEFILE_PATH}/${CORENAME}_libretro.dylib
    - rm -rf /private/var/tmp/homebrew_dosbox_core

################################### CELLULAR #################################
# Android ARMv7a
android-armeabi-v7a:
  extends:
    - .libretro-android-jni-armeabi-v7a
    - .core-defs
  variables:
    CMAKE: cmake
    CMAKE_BUILD_TYPE: Release
  script:
    - DEPS_BIN_DIR="$PWD/$MAKEFILE_PATH/deps_bin/$ANDROID_ABI"
      EXTRA_CMAKE_FLAGS="-DANDROID_PLATFORM=android-16 -DCMAKE_TOOLCHAIN_FILE=${NDK_ROOT}/build/cmake/android.toolchain.cmake -DANDROID_STL=c++_static -DANDROID_ABI=${ANDROID_ABI}"
      make -C ${MAKEFILE_PATH} -f deps/munt.makefile
    - $NDK_ROOT/ndk-build --no-print-directory -j$NUMPROC -C $JNI_PATH/jni $PLATFORM_ARGS
    - mv $JNI_PATH/libs/$ANDROID_ABI/libretro.so $LIBNAME
    - if [ $STRIP_CORE_LIB -eq 1 ]; then $NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-strip $LIBNAME; fi

# Android ARMv8a
android-arm64-v8a:
  extends:
    - .libretro-android-jni-arm64-v8a
    - .core-defs
  variables:
    CMAKE: cmake
    CMAKE_BUILD_TYPE: Release
  script:
    - DEPS_BIN_DIR="$PWD/$MAKEFILE_PATH/deps_bin/$ANDROID_ABI"
      EXTRA_CMAKE_FLAGS="-DANDROID_PLATFORM=android-16 -DCMAKE_TOOLCHAIN_FILE=${NDK_ROOT}/build/cmake/android.toolchain.cmake -DANDROID_STL=c++_static -DANDROID_ABI=${ANDROID_ABI}"
      make -C ${MAKEFILE_PATH} -f deps/munt.makefile
    - $NDK_ROOT/ndk-build --no-print-directory -j$NUMPROC -C $JNI_PATH/jni $PLATFORM_ARGS
    - mv $JNI_PATH/libs/$ANDROID_ABI/libretro.so $LIBNAME
    - if [ $STRIP_CORE_LIB -eq 1 ]; then $NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-strip $LIBNAME; fi

# Android 64-bit x86
android-x86_64:
  extends:
    - .libretro-android-jni-x86_64
    - .core-defs
  variables:
    CMAKE: cmake
    CMAKE_BUILD_TYPE: Release
  script:
    - DEPS_BIN_DIR="$PWD/$MAKEFILE_PATH/deps_bin/$ANDROID_ABI"
      EXTRA_CMAKE_FLAGS="-DANDROID_PLATFORM=android-16 -DCMAKE_TOOLCHAIN_FILE=${NDK_ROOT}/build/cmake/android.toolchain.cmake -DANDROID_STL=c++_static -DANDROID_ABI=${ANDROID_ABI}"
      make -C ${MAKEFILE_PATH} -f deps/munt.makefile
    - $NDK_ROOT/ndk-build --no-print-directory -j$NUMPROC -C $JNI_PATH/jni $PLATFORM_ARGS
    - mv $JNI_PATH/libs/$ANDROID_ABI/libretro.so $LIBNAME
    - if [ $STRIP_CORE_LIB -eq 1 ]; then $NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-strip $LIBNAME; fi

# Android 32-bit x86
#android-x86:
#  extends:
#    - .libretro-android-jni-x86
#    - .core-defs
#  variables:
#    CMAKE: cmake
#    CMAKE_BUILD_TYPE: Release
#  script:
#    - DEPS_BIN_DIR="$PWD/$MAKEFILE_PATH/deps_bin/$ANDROID_ABI"
#      EXTRA_CMAKE_FLAGS="-DANDROID_PLATFORM=android-16 -DCMAKE_TOOLCHAIN_FILE=${NDK_ROOT}/build/cmake/android.toolchain.cmake -DANDROID_STL=c++_static -DANDROID_ABI=${ANDROID_ABI}"
#      make -C ${MAKEFILE_PATH} -f deps/munt.makefile
#    - $NDK_ROOT/ndk-build --no-print-directory -j$NUMPROC -C $JNI_PATH/jni $PLATFORM_ARGS
#    - mv $JNI_PATH/libs/$ANDROID_ABI/libretro.so $LIBNAME
#    - if [ $STRIP_CORE_LIB -eq 1 ]; then $NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-strip $LIBNAME; fi

################################### CONSOLES #################################
# Nintendo Switch
#libretro-build-libnx-aarch64:
#  extends:
#    - .libretro-libnx-static-retroarch-master
#    - .core-defs
#  variables:
#    CMAKE_GENERATOR: 'Unix Makefiles'
